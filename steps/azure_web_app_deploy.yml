parameters:
  - name: appName
    type: string
  - name: appResourceGroup
  - name: azurecrName
    type: string
  - name: repository
    type: string
  - name: tag
    type: string
    default: ''

steps:
  - script: |
      TAG=${{ coalesce(parameters.tag, replace(replace(variables['Build.SourceBranch'], 'refs/heads/', ''), '/', '.')) }}

      echo "##vso[build.addbuildtag]$TAG"
      echo "##vso[task.setvariable variable=tag]$TAG"
    displayName: Add Docker Image Build Tags
  - script: |
      IMAGE=${{ parameters.azurecrName }}.azurecr.io/${{ parameters.repository }}:$(tag)

      # Check image exists in registry
      az account set -s $(CONTAINER_REGISTRY_SUBSCRIPTION_ID)
      az acr login --name ${{ parameters.azurecrName }}
      docker manifest inspect $IMAGE > /dev/null
      
      if [ $? -ne 0 ]; then
        echo "##vso[task.logissue type=error]Image not found in registry."
        exit 1
      fi

      az account set -s $(SUBSCRIPTION_ID)

      az webapp config container set --name ${{ parameters.appName }} \
      --resource-group ${{ parameters.appResourceGroup }} \
      --docker-custom-image-name $IMAGE \
      --docker-registry-server-url https://${{ parameters.azurecrName }}.azurecr.io \
      --docker-registry-server-user $AZURE_SERVICE_PRINCIPAL_ID \
      --docker-registry-server-password $AZURE_SERVICE_PRINCIPAL_SECRET
    displayName: Deploy Container to Azure Web App
    env:
      AZURE_SERVICE_PRINCIPAL_ID: $(AZURE_SERVICE_PRINCIPAL_ID)
      AZURE_SERVICE_PRINCIPAL_SECRET: $(AZURE_SERVICE_PRINCIPAL_SECRET)
  - script: |
      IMAGE=${{ parameters.azurecrName }}.azurecr.io/${{ parameters.repository }}

      az account set -s $(CONTAINER_REGISTRY_SUBSCRIPTION_ID)
      az acr login --name ${{ parameters.azurecrName }}

      docker pull $IMAGE:$(tag)
      docker tag $IMAGE:$(tag) $IMAGE:$(ENVIRONMENT)
      docker push $IMAGE:$(ENVIRONMENT)
    displayName: Tag Docker Image with Environment

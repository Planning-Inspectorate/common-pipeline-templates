parameters:
  - name: artifactName
    type: string
    default: terraform-plan
  - name: environmentVariables
    type: object
    default: []
  - name: subscriptionId
    type: string

steps:
  - script: |
      if [[ -d "${{ parameters.artifactName }}" ]]; then
        echo "Terraform Plan found..."
      else
        echo "##[warning]No Terraform Plan found, skipping Apply..."
        echo "##vso[task.setvariable variable=skipApply]true"
      fi
    displayName: Check for Terraform Plan
    workingDirectory: $(Pipeline.Workspace)
  - script: |
      chmod -R +x .
      terraform apply -input=false tfplan
    condition: ne(variables['skipApply'], 'true')
    displayName: Terraform Apply
    env:
      ARM_CLIENT_ID: $(AZURE_SERVICE_PRINCIPAL_ID)
      ARM_CLIENT_SECRET: $(AZURE_SERVICE_PRINCIPAL_SECRET)
      ARM_SUBSCRIPTION_ID: ${{ parameters.subscriptionId }}
      ARM_TENANT_ID: $(AZURE_TENANT_ID)
      ${{ each var in parameters.environmentVariables }}:
        ${{ var.key }}: ${{ var.value }}
    workingDirectory: $(Pipeline.Workspace)/${{ parameters.artifactName }}

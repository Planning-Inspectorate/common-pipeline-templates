parameters:
  - name: environmentVariables
    type: object
    default: []
  - name: subscriptionId
    type: string
  - name: workingDirectory
    type: string
    default: $(Build.Repository.LocalPath)

steps:
  - script: |
      terraform init -input=false
      terraform plan -out=tfplan -input=false -detailed-exitcode

      # Sets a variable that can be used to skip the apply step.
      # If the Apply step is used in a different stage then the condition can be set at the stage level
      if [[ $? -eq 0 ]]; then
        echo "##vso[task.setvariable variable=skipApply]true"
      fi
    displayName: Terraform Plan
    env:
      ARM_CLIENT_ID: $(AZURE_SERVICE_PRINCIPAL_ID)
      ARM_CLIENT_SECRET: $(AZURE_SERVICE_PRINCIPAL_SECRET)
      ARM_SUBSCRIPTION_ID: ${{ parameters.subscriptionId }}
      ARM_TENANT_ID: $(AZURE_TENANT_ID)
      ${{ each var in parameters.environmentVariables }}:
        ${{ var.key }}: ${{ var.value }}
    workingDirectory: ${{ parameters.workingDirectory }}
  - task: CopyFiles@2
    displayName: Copy tfplan to artifact
    inputs:
      SourceFolder: ${{ parameters.workingDirectory }}
      Contents: |
        .terraform/**
        .terraform.lock.hcl
        tfplan
      TargetFolder: $(Build.ArtifactStagingDirectory)
  - publish: $(Build.ArtifactStagingDirectory)
    artifact: terraform-plan
    displayName: Publish sources

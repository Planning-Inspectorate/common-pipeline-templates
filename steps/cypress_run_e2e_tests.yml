parameters:
  - name: cypressGroupName
    type: string
  - name: cypressJsonPath
    type: string
    default: cypress/cucumber-json
  - name: cypressRecordKey
    type: string
  - name: cypressReportPath
    type: string
    default: cypress/cucumber-report
  - name: cypressScreenshotsPath
    type: string
    default: cypress/screenshots
  - name: dockerComposeFilePath
    type: string
    default: $(Build.Repository.LocalPath)/docker-compose.yml
  - name: nodeVersion
    type: string
    default: 16
  - name: workingDirectory
    type: string
    default: $(Build.Repository.LocalPath)

steps:
  - script: |
      docker-compose -f ${{ parameters.dockerComposeFilePath }} up -d
    displayName: Start the world
  - script: |
      docker container ls -a
    displayName: Display all containers
  - script: |
      source ~/.bashrc
      nvm use ${{ parameters.nodeVersion }} || nvm install ${{ parameters.nodeVersion }}
      npx cypress run --parallel --record --group ${{ parameters.cypressGroupName }} --ci-build-id $(Build.BuildId)
    displayName: Run Cypress tests in parallel
    env:
      CYPRESS_RECORD_KEY: ${{ parameters.cypressRecordKey }}
    workingDirectory: ${{ parameters.workingDirectory }}
  - script: |
      SCREENSHOTS_DIR=${{ parameters.cypressScreenshotsPath }}

      if [[ -d "$SCREENSHOTS_DIR" ]]; then
        cp -a $SCREENSHOTS_DIR/. $(Build.ArtifactStagingDirectory)/screenshots
      else
        echo "No screenshots to copy..."
      fi
    condition: always()
    displayName: Copy screenshots to artifact
    workingDirectory: ${{ parameters.workingDirectory }}
  - script: |
      JSON_DIR=${{ parameters.cypressJsonPath }}

      if [[ -d "$JSON_DIR" ]]; then
        cp -a $JSON_DIR/. $(Build.ArtifactStagingDirectory)/cucumber-json
      else
        echo "No json to copy..."
      fi
    condition: always()
    displayName: Copy cucumber JSON to artifact
    workingDirectory: ${{ parameters.workingDirectory }}
  - script: |
      REPORTS_DIR=${{ parameters.cypressReportPath }}

      if [[ -d "$REPORTS_DIR" ]]; then
        cp -a $REPORTS_DIR/. $(Build.ArtifactStagingDirectory)/cucumber-report
      else
        echo "No reports to copy..."
      fi
    condition: always()
    displayName: Copy reports to artifact
    workingDirectory: ${{ parameters.workingDirectory }}
